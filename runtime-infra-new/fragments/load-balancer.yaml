AWSTemplateFormatVersion: 2010-09-09
Description: 'Create application load balancer, network load balancer and VPC link for
API gateway integration'

Parameters:
  LoadBalancerName:
    Type: String
    Description: Load balancers logical name

  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  # Application load balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internal
      IpAddressType: ipv4
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref WebappSecurityGroup

  # Network load balancer
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets: !Ref Subnets

  # Network security groups
  WebappSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${LoadBalancerName}-webapp-security-group
      GroupDescription: "ingres tcp 8080, egress all"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: "0.0.0.0/0"
      VpcId: !Ref VpcId


  # API Gateway integrations
  NetworkLoadBalancerLink:
    Type: AWS::ApiGateway::VpcLink
    Properties:
      Name: !Sub '${LoadBalancerName}-nlb-link'
      Description: "API-GW link to Network load balancer"
      TargetArns:
        - !Ref NetworkLoadBalancer


Outputs:
  NetworkLoadBalancer:
    Value: !Ref NetworkLoadBalancer
    Description: Network Load Balancer Id

  ApplicationLoadBalancer:
    Value: !Ref ApplicationLoadBalancer
    Description: Application Load Balancer Id

  NetworkLoadBalancerLink:
    Value: !Ref NetworkLoadBalancerLink
    Description: Used by API-Gw to connect into VPC

  ApplicationLoadBalancerDomain:
    Value: !Sub '${ApplicationLoadBalancer.DNSName}'
    Description: Application Load Balancer Domain to use for http URL
