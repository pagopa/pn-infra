AWSTemplateFormatVersion: 2010-09-09
Description: 'Create application load balancer, network load balancer and VPC link for
API gateway integration'

# See https://aws.amazon.com/it/blogs/networking-and-content-delivery/application-load-balancer-type-target-group-for-network-load-balancer/

Parameters:
  LoadBalancerName:
    Type: String
    Description: Load balancers logical name

  VpcId:
    Type: AWS::EC2::VPC::Id

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>

Resources:

  ###                       APPLICATION LOAD BALANCER                       ###
  #############################################################################
  # Application load balancer
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internal
      IpAddressType: ipv4
      Subnets: !Ref Subnets
      SecurityGroups:
        - !Ref WebappSecurityGroup

  # Application load balancer listener
  ApplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Protocol: HTTP
      Port: 8080
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig:
            StatusCode: 404
            ContentType: "application/json"
            MessageBody: "{ \"error\": \"404\", \"message\": \"Load balancer rule not configured\" }"
          Order: 1

  # Application security groups
  WebappSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${LoadBalancerName}-webapp-security-group
      GroupDescription: "ingres tcp 8080, egress all"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: "0.0.0.0/0"
      VpcId: !Ref VpcId


  ###                         NETWORK LOAD BALANCER                         ###
  #############################################################################

  # Network load balancer
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internal
      IpAddressType: ipv4
      Subnets: !Ref Subnets

  # Network load balancer listener
  NetworkLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Protocol: TCP
      Port: 8080
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NetworkToApplicationLoadBalancerTargetGroup
          Order: 1

  # Network load balancer forward to application load balancer
  NetworkToApplicationLoadBalancerTargetGroup:
    DependsOn: ApplicationLoadBalancerListener
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: alb
      Protocol: TCP
      Port: 8080
      Targets:
        - Id: !Ref ApplicationLoadBalancer
      VpcId: !Ref VpcId


  ###                        API GATEWAY INTEGRATION                        ###
  #############################################################################

  # API Gateway integrations
  NetworkLoadBalancerLink:
    Type: AWS::ApiGateway::VpcLink
    Properties:
      Name: !Sub '${LoadBalancerName}-nlb-link'
      Description: "API-GW link to Network load balancer"
      TargetArns:
        - !Ref NetworkLoadBalancer


Outputs:

  NetworkLoadBalancer:
    Value: !Ref NetworkLoadBalancer
    Description: Network Load Balancer Id

  NetworkLoadBalancerLink:
    Value: !Ref NetworkLoadBalancerLink
    Description: Used by API-Gw to connect into VPC


  ApplicationLoadBalancer:
    Value: !Ref ApplicationLoadBalancer
    Description: Application Load Balancer Id

  ApplicationLoadBalancerListener:
    Value: !Ref ApplicationLoadBalancerListener
    Description: Application Load Balancerlistener Arn

  ApplicationLoadBalancerDomain:
    Value: !Sub '${ApplicationLoadBalancer.DNSName}'
    Description: Application Load Balancer Domain to use for http URL
