AWSTemplateFormatVersion: 2010-09-09
Description: 'This template deploys the queues needed for comuication between microservices and 
              API gateway custom domains'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ApiDnsName:
    Type: String
    Description: 'The DNS name used for B2B rest API.'

  ApiCertificateArn:
    Type: String
    Description: 'The certificate used for B2B rest API.'

  WebApiDnsName:
    Type: String
    Description: 'The DNS name used for browser rest API.'

  WebApiCertificateArn:
    Type: String
    Description: 'The certificate used for browser rest API.'

  HostedZoneId:
    Description: "Hosted Zone Id in which you want to add record"
    Type: String

  # pass-though parameters
  NetworkLoadBalancerLink:
    Type: String
  ApplicationLoadBalancerListenerArn:
    Type: String
  ApplicationLoadBalancerDomain:
    Type: String
  AlarmSNSTopicArn:
    Type: String
  VpcId:
    Type: String
  SubnetsIds:
    Type: String
  ECSClusterName:
    Type: String


Resources:

  ###            COMMON RESOURCES FOR WEB API AND DISTRIBUTIONS            ###
  ############################################################################

  # Custom domain for B2B api
  ApiCustomDomain:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-custom-domain.yaml"
      Parameters:
        DnsName: !Ref ApiDnsName
        CertificateArn: !Ref ApiCertificateArn
        HostedZoneId: !Ref HostedZoneId

  # Custom domain for B2B api
  WebApiCustomDomain:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-custom-domain.yaml"
      Parameters:
        DnsName: !Ref WebApiDnsName
        CertificateArn: !Ref WebApiCertificateArn
        HostedZoneId: !Ref HostedZoneId


  ###                     MESSAGE ORIENTED MIDDLEWARE                     ###
  ###########################################################################

  ### PN-CORE EventBus
  # Receive events from SafeStorage and CarrierPigeon (AKA ExternalChannel) 
  # and redirect to the right SQS queue
  PnCoreEventBus:
    Type: AWS::Events::EventBus
    Properties: 
      Name: !Sub '${ProjectName}-CoreEventBus'
  
  # Send All Safe Storage Response to pn-delivery-push
  PnCoreEventBusToSafeStorageResponseQueue:
    Type: AWS::Events::Rule
    Properties: 
      Description: Route SafeStorage Events to pn-delivery-push
      EventBusName: !Ref PnCoreEventBus
      EventPattern:
        detail:
          documentType: [ { "exists": true  } ]
      Targets: 
        - Id: !Sub '${ProjectName}-CoreEventBus-SafeStore2DeliveryPush'
          Arn: !GetAtt SafeStorageToDeliveryPushQueue.Outputs.QueueARN

  # Send ExternalChannel Response to pn-delivery-push
  PnCoreEventBusToExtChResponseQueue:
    Type: AWS::Events::Rule
    Properties: 
      Description: Route SafeStorage Events to pn-delivery-push
      EventBusName: !Ref PnCoreEventBus
      EventPattern:
        detail:
          digitalLegal: [ { "exists": true  } ]
      Targets: 
        - Id: !Sub '${ProjectName}-CoreEventBus-ExtCh2DeliveryPush'
          Arn: !GetAtt ExternalChannelsOutputsQueue.Outputs.QueueARN


  
  ### Communication FROM SafeStorage TO pn-delivery-push ###
  SafeStorageToDeliveryPushQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/sqs-queue.yaml"
      Parameters:
        QueueName: !Sub '${ProjectName}-safestore_to_deliverypush'
        DelaySeconds: 1

  ### Communication between PN-DELIVERY and PN-DELIVERY-PUSH ###
  DeliveryPushInputsQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/sqs-queue.yaml"
      Parameters:
        QueueName: !Sub '${ProjectName}-delivery_push_inputs'
        DelaySeconds: 1


  ### Communication TO and FROM EXTERNAL-CHANNELS ###
  ExternalChannelsInputsQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/sqs-queue.yaml"
      Parameters:
        QueueName: !Sub '${ProjectName}-external_channel_inputs'
        DelaySeconds: 1

  ExternalChannelsOutputsQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/sqs-queue.yaml"
      Parameters:
        QueueName: !Sub '${ProjectName}-external_channel_outputs'
        DelaySeconds: 1


Outputs:
  # Web API for browsers and B2B
  ApiDnsName:
    Value: !Ref ApiDnsName
    Description: 'The DNS name used for B2B rest API.'
  WebApiDnsName:
    Value: !Ref WebApiDnsName
    Description: 'The DNS name used for browser rest API.'

  # SafeStorage to DeliveryPush
  SafeStorageToDeliveryPushQueueName:
    Value: !GetAtt SafeStorageToDeliveryPushQueue.Outputs.QueueName
    Description: SafeStorage-to-delivery-push queue name
  SafeStorageToDeliveryPushQueueURL:
    Value: !GetAtt SafeStorageToDeliveryPushQueue.Outputs.QueueURL
    Description: SafeStorage-to-delivery-push queue URL
  SafeStorageToDeliveryPushQueueARN:
    Value: !GetAtt SafeStorageToDeliveryPushQueue.Outputs.QueueARN
    Description: SafeStorage-to-delivery-push queue ARN

  # Delivery push inputs
  DeliveryPushInputsQueueName:
    Value: !GetAtt DeliveryPushInputsQueue.Outputs.QueueName
    Description: pn-delivery-push input queue name
  DeliveryPushInputsQueueURL:
    Value: !GetAtt DeliveryPushInputsQueue.Outputs.QueueURL
    Description: pn-delivery-push input queue URL
  DeliveryPushInputsQueueARN:
    Value: !GetAtt DeliveryPushInputsQueue.Outputs.QueueARN
    Description: pn-delivery-push input queue ARN

  # External channels inputs
  ExternalChannelsInputsQueueName:
    Value: !GetAtt ExternalChannelsInputsQueue.Outputs.QueueName
    Description: pn-external-channels input queue name
  ExternalChannelsInputsQueueURL:
    Value: !GetAtt ExternalChannelsInputsQueue.Outputs.QueueURL
    Description: pn-external-channels input queue URL
  ExternalChannelsInputsQueueARN:
    Value: !GetAtt ExternalChannelsInputsQueue.Outputs.QueueARN
    Description: pn-external-channels input queue ARN

  # External channels outputs
  ExternalChannelsOutputsQueueName:
    Value: !GetAtt ExternalChannelsOutputsQueue.Outputs.QueueName
    Description: pn-external-channels output queue name
  ExternalChannelsOutputsQueueURL:
    Value: !GetAtt ExternalChannelsOutputsQueue.Outputs.QueueURL
    Description: pn-external-channels output queue URL
  ExternalChannelsOutputsQueueARN:
    Value: !GetAtt ExternalChannelsOutputsQueue.Outputs.QueueARN
    Description: pn-external-channels output queue ARN


  # pass-thought parameters
  NetworkLoadBalancerLink:
    Value: !Ref NetworkLoadBalancerLink
  ApplicationLoadBalancerListenerArn:
    Value: !Ref ApplicationLoadBalancerListenerArn
  ApplicationLoadBalancerDomain:
    Value: !Ref ApplicationLoadBalancerDomain
  AlarmSNSTopicArn:
    Value: !Ref AlarmSNSTopicArn
  VpcId:
    Value: !Ref VpcId
  SubnetsIds:
    Value: !Ref SubnetsIds
  ECSClusterName:
    Value: !Ref ECSClusterName