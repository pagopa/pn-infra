AWSTemplateFormatVersion: 2010-09-09
Description: 'This template deploys the OER dashboard'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  ConfidentialInfoAccountId:
    Type: String
    Default: ''
    Description: 'Confidential Info AWS Account ID'

  Alb:
    Type: String
    Default: ''
    Description: 'ALB'

  RaddTargetGroup:
    Type: String
    Default: ''
    Description: 'RADD Target Group'

Resources:

  StorageFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          const handler = async (event) => {
            return {
              status: 200,
              message: 'OK'
            }
          };

          export { handler };
      Description: "Storage function custom widget"
      FunctionName: pn-storage-function
      Handler: index.handler
      MemorySize: 128
      Role: !GetAtt StorageFunctionIAMRole.Arn
      Runtime: nodejs16.x
      Timeout: 60

  StorageFunctionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Effect: Allow
                Resource:
                  - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/pn-storage-function:*
              - Action:
                  - cloudwatch:GetMetricData
                  - cloudwatch:ListMetrics
                  - dynamodb:List*
                  - dynamodb:DescribeTable
                Effect: Allow
                Resource: '*'
          PolicyName: pn-storage-function-policy

  StorageFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${StorageFunction}
      RetentionInDays: 14


  MicroservicesDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub ${ProjectName}-OER-Dashboard
      DashboardBody: 
        'Fn::Transform':
          Name: 'OerDashboardBodyTransform'
          Parameters:
            Region: !Sub ${AWS::Region}
            # Cloudformation doesn't allow to use IF conditions as Marco parameters so the optionality is managed at Lambda level
            ConfidentialInfoAccountId: !Ref ConfidentialInfoAccountId
            MicroservicesAlarmArns:
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-external-registries-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-mandate-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-delivery-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-auth-fleet-v2-CompositeAlarm              
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-downtime-logs-CompositeAlarm                            
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-user-attributes-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-paper-channel-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-radd-fsu-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-infra-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-frontend-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-delivery-push-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-logsaver-be-CompositeAlarm
              - !Sub arn:aws:cloudwatch:${AWS::Region}:$CONFIDENTIAL_INFO_ACCOUNT_ID:alarm:pn-data-vault-CompositeAlarm
            MicroservicesDashboardLinks:
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-external-registries       
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-mandate
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-delivery
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-auth-fleet-v2            
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-downtime-logs                         
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-user-attributes
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-paper-channel
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-radd-fsu
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-infra
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-frontend
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-delivery-push
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-logsaver-be
              - !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=pn-data-vault;accountId=$CONFIDENTIAL_INFO_ACCOUNT_ID
            FunctionalAlarmsArns:
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-CompositeAlarm-NotificationInput
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-CompositeAlarm-NotificationOutput
              - !Sub arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:pn-CompositeAlarm-NotificationProgress
            FunctionalAlarmsNames:
              - Nuove Notifiche
              - Lettura Notifiche
              - Workflow
            LoginAvailability:
              - "API:pn-token-exchange-api"
            ReadNotificationAvailability:
              - "API:pn-token-exchange-api"
              - "API:pn-delivery-progress-public-api-B2B"
              - "API:pn-delivery-public-api-B2B"
              - "API:pn-delivery-public-api-IO"
              - "API:pn-delivery-public-api-WEB"
              - "API:pn-delivery-push-public-api-B2B"
              - "API:pn-delivery-push-public-api-IO"
              - "API:pn-delivery-push-public-api-WEB"
              - !Sub "ALB:${Alb}:${RaddTargetGroup}"
            WriteNotificationAvailability:
              - "API:pn-delivery-public-api-B2B"
              - "API:pn-delivery-public-api-IO"
              - "API:pn-delivery-public-api-WEB"
              - "API:pn-delivery-public-api-WEB"
              - "API:pn-ExternalRegistry-public-api-B2B"
              - "API:pn-ExternalRegistry-public-api-WEB"
            MandateAvailability:
              - "API:pn-mandate-public-api-WEB"
              - "API:pn-token-exchange-api"
              - "API:API:pn-ExternalRegistry-public-api-WEB"
            DigitalAddressAvailability:
              - "API:pn-token-exchange-api"
              - "API:pn-UserAttributes-public-api-WEB"
              - "API:pn-ExternalRegistry-public-api-WEB"
            ApiKeyAvailability:
              - "API:pn-token-exchange-api"
              - "API:pn-ApikeyManager-public-api-WEB"
              - "API:pn-ApikeyManager-bo-public-api-WEB"
            StorageWidgetFunction: !Ref StorageFunction
Outputs:
  Version:
    Value: !Ref Version
