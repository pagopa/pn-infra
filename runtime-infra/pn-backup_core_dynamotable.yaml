AWSTemplateFormatVersion: "2010-09-09"
Description: "Backup Plan template for AWS Backups"
Parameters:

  EnvType:
    Type: String

  LifecycleDeleteAfterDays:
    Type: Number
    Default: 180
    Description: Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus MoveToColdStorageAfterDays.
  
  LifecycleMoveToColdStorageAfterDays:
    Type: Number
    Default: 31
    Description: Specifies the number of days after creation that a recovery point is moved to cold storage.

  ProdCronExpression:
    Type: String
    Default: "cron(0 4 * * ? *)"

  OtherEnvCronExpression:
    Type: String
    Default: "cron(0 4 * * ? 2020)" # date in the past to not have the schedule run

  CompletionWindowMinutes:
    Type: Number
    Default: 600

Conditions:
  IsProdEnv: !Equals [ !Ref EnvType, 'prod' ]

Resources:
  BackupVault:
    Type: "AWS::Backup::BackupVault"
    Properties:
      BackupVaultName: !Sub 'BackupVault_Dynamodb_${AWS::StackName}'

  BackupPlan:
    Type: "AWS::Backup::BackupPlan"
    Properties:
      BackupPlan:
        BackupPlanName: !Sub 'BackupPlan_${AWS::StackName}'
        BackupPlanRule:
          
          - RuleName: "RuleForDailyBackups"
            TargetBackupVault: !Ref BackupVault
            ScheduleExpression: !If [ IsProdEnv, !Ref ProdCronExpression, !Ref OtherEnvCronExpression ] 
            CompletionWindowMinutes : !Ref CompletionWindowMinutes
            EnableContinuousBackup: true
            Lifecycle:
              DeleteAfterDays:
                Ref: LifecycleDeleteAfterDays
              MoveToColdStorageAfterDays:
                Ref: LifecycleMoveToColdStorageAfterDays

  BackupRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "backup.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup"

  TagBasedBackupSelection:
    Type: "AWS::Backup::BackupSelection"
    Properties:
      BackupSelection:
        SelectionName: "TagBasedBackupSelection"
        IamRoleArn: !GetAtt BackupRole.Arn
        Resources:
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Downtime-DowntimeLogs
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/Downtime-Event
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-aggregates
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-AuditStorage
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-batchPolling
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-DocumentCreationRequestTable
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-FutureAction
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-IOMessages
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-MandateHistory
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-NotificationDelegationMetadata
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-Notifications
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-NotificationsMetadata
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-NotificationsCost
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-pn-NotificationsQR
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-OnboardInstitutions
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-OptInSent
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperCap
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperCost
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperDeliveryDriver
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperDeliveryFile
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperEvents
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperNotificationFailed
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperRequestDelivery
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperRequestError
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperTender
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperZone
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PnEstimate
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-ProgressionSensorData
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-Timelines
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-UserAttributes
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-WebhookEvents
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-WebhookStreams
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-batchRequests
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-counter
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-operations-iuns
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-radd-transaction
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-LastPollForFutureActionTable
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-TimelinesForInvoicing
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-apiKey
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-paAggregations
          - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/pn-PaperAddress
      BackupPlanId: !Ref BackupPlan
