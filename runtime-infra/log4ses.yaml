AWSTemplateFormatVersion: '2010-09-09'
Description: Serverless patterns - SNS to SQS

Resources:
  # Define the SQS queue
  SesSqsQueue:
    Type: AWS::SQS::Queue
  OrderProcessingPipeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "pipes.amazonaws.com"
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: "BaseInlinePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: "AccessToCloudWatch"
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Sid: "UseSqsAsSource"
                Effect: "Allow"
                Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueAttributes"
                Resource: !GetAtt "SesSqsQueue.Arn"
  SesLog:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: "14"
      LogGroupName: "/aws/events/ses"

  OrderDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: "SES_SNS"
      DashboardBody: !Sub |
        {
            "widgets": [
                {
                    "height": 6,
                    "width": 12,
                    "y": 0,
                    "x": 0,
                    "type": "metric",
                    "properties": {
                        "metrics": [
                            [ "AWS/SES", "Reputation.BounceRate", { "region": "eu-south-1", "visible": false } ],
                            [ ".", "Reputation.ComplaintRate", { "region": "eu-south-1", "visible": false } ],
                            [ ".", "Send", { "region": "eu-south-1" } ],
                            [ ".", "Delivery", { "region": "eu-south-1" } ],
                            [ ".", "Bounce", { "region": "eu-south-1" } ]
                        ],
                        "view": "timeSeries",
                        "stacked": false,
                        "region": "eu-south-1",
                        "period": 300,
                        "title": "mails_SES",
                        "stat": "SampleCount",
                        "yAxis": {
                            "left": {
                                "min": 0
                            }
                        }
                    }
                },
                {
                    "height": 6,
                    "width": 12,
                    "y": 0,
                    "x": 12,
                    "type": "metric",
                    "properties": {
                        "metrics": [
                            [ "AWS/SNS", "NumberOfNotificationsDelivered", "PhoneNumber", "PhoneNumberDirect", { "region": "eu-south-1" } ]
                        ],
                        "view": "bar",
                        "stacked": true,
                        "region": "eu-south-1",
                        "title": "SMS",
                        "yAxis": {
                            "left": {
                                "min": 0,
                                "max": 50000
                            }
                        },
                        "period": 300,
                        "stat": "SampleCount"
                    }
                },
                {
                    "height": 5,
                    "width": 12,
                    "y": 6,
                    "x": 0,
                    "type": "log",
                    "properties": {
                        "query": "SOURCE '/aws/events/ses' | fields @timestamp, @message, @logStream, @log\n| sort @timestamp desc\n| limit 20",
                        "region": "eu-south-1",
                        "stacked": false,
                        "view": "table"
                    }
                },
                {
                    "height": 5,
                    "width": 12,
                    "y": 6,
                    "x": 12,
                    "type": "metric",
                    "properties": {
                        "view": "gauge",
                        "stacked": false,
                        "metrics": [
                            [ "AWS/SNS", "SMSMonthToDateSpentUSD" ]
                        ],
                        "region": "eu-south-1",
                        "yAxis": {
                            "left": {
                                "min": 0,
                                "max": 10000
                            }
                        }
                    }
                }
            ]
        }


  # Define the SNS topic
  SesSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      # Subscribes the SQS queue to the SNS topic
      Subscription:
        - Protocol: sqs
          Endpoint: !GetAtt SesSqsQueue.Arn
 
    
  # Policy allow SES to publish event to SNS topic:
  TopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Sid: "Allow SES publish to SNS"
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: 'SNS:Publish'
            Resource: !Ref  SesSnsTopic
            Condition:
              StringLike:
                'AWS:SourceArn': 'arn:aws:ses:*'
      Topics:
        - !Ref SesSnsTopic

  # Policy allows SNS to publish to this SQS queue
  SnsToSqsPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "Allow SNS publish to SQS"
            Effect: Allow
            Principal: 
              Service: "sns.amazonaws.com"
            Resource: !GetAtt SesSqsQueue.Arn
            Action: SQS:SendMessage
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SesSnsTopic
      Queues:
        - Ref: SesSqsQueue

# Eventbrige pipe to cloudwatch
  PipeSes:
    Type: AWS::Pipes::Pipe
    Properties:
      Description: Pipe on Event Bridge to send ses log to cloudwatch
      Name: PipeSesToCloudwatch
      RoleArn: !GetAtt "OrderProcessingPipeRole.Arn"
      Source: !GetAtt SesSqsQueue.Arn
      Target: !GetAtt SesLog.Arn
      TargetParameters:
        CloudWatchLogsParameters: 
          LogStreamName: ses


Outputs:
  SesSqsQueueArn:
    Description: SQS queue ARN
    Value: !GetAtt SesSqsQueue.Arn
  SesSqsQueueURL:
    Description: SQS queue URL
    Value: !Ref SesSqsQueue    
  SesSqsQueueArn:
    Description: SNS topic ARN
    Value: !Ref SesSnsTopic
  SesLogArn:
    Description: Cloudwatch LogGroup ARN
    Value: !GetAtt SesLog.Arn

