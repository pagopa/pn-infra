AWSTemplateFormatVersion: "2010-09-09"

Description: |
  CloudFormation definition of elasticache cluster

Parameters:
  ProjectName:
    Type: String
    Description: Name of the project

  AlarmSNSTopicName:
    Type: String
    Description: "A name of an SNS topic where to send alarm." 

  ElasticacheType: 
    Type: String
    Description: Which type of elasticache to deploy (serverless or managed)
    Default: managed
    AllowedValues:
      - serverless
      - managed

  NodeType:
    Type: String
    Description: Cache node type (i.e. cache.t2.micro)

  Replicas:
    Type: Number
    Description: Number of nodes

  VpcSubnets:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: Private subnets to deploy resources into

  VpcId:
    Type: "AWS::EC2::VPC::Id"
    Description: VPC id for the cluster

  CPUUtilizationThreshold:
    Type: Number
    Description: The threshold percentage of CPU usage.
    MinValue: 0
    MaxValue: 100
    Default: 60

  EngineCPUUtilizationThreshold:
    Type: Number
    Description: The threshold percentage of CPU utilization of the Redis engine thread
    MinValue: 0
    MaxValue: 100
    Default: 60

  RedisMemoryUsedThreshold:
    Type: Number
    Description: The threshold percentage for the amount of memory utilized.
    MinValue: 0
    MaxValue: 100
    Default: 60

  CurrentConnectionsThreshold:
    Type: Number
    Description: "The threshold number of concurrent and active connections. (Max connections: 65000)."
    MinValue: 0
    MaxValue: 65000
    Default: 60000

  AccessStringDefaultUser:
    Type: String
    Description: "AccessString for elasticache redis default user"
    Default: "on ~* +@all"

  UserIdDefaultUser:
    Type: String
    Description: "UserId for elasticache redis default user"
    Default: "default-redis"

  UsernameDefaultUser:
    Type: String
    Description: "Username for elasticache redis default user"
    Default: "default"

  AccessStringUser1:
    Type: String
    Description: "AccessString for elasticache redis user"
    Default: "on ~auth::* +@all"

  UserIdUser1:
    Type: String
    Description: "UserId for elasticache redis user"
    Default: "iam-user-radd-auth"

  UsernameUser1:
    Type: String
    Description: "Username for elasticache redis user"
    Default: "iam-user-radd-auth"

Conditions:
  IsServerless: !Equals [!Ref ElasticacheType, "serverless"]
  IsManaged: !Equals [!Ref ElasticacheType, "managed"]

Resources:

  RedisServerless:
    Type: AWS::ElastiCache::ServerlessCache
    Properties:
      ServerlessCacheName: !Sub ${ProjectName}-redis-serverless
      Engine: redis
      Description: Redis Serverless Cache for Logextractor
      MajorEngineVersion: 7
      SecurityGroupIds:
        - !GetAtt SecurityGroup.GroupId
      SubnetIds: !Ref VpcSubnets
      KmsKeyId: !Ref RedisServerlessEncryptionKey

  RedisServerlessEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Redis Serverless Cache Encryption Key
      KeyPolicy:
        Version: '2012-10-17'
        Id: key-default-1
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: Allow use of the key
            Effect: Allow
            Principal:
              Service: elasticache.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: '*'

  SubnetGroup:
    Type: "AWS::ElastiCache::SubnetGroup"
    Properties:
      Description: Cache Subnet Group
      SubnetIds: !Ref VpcSubnets

  AllowedSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Earn permissions to access cache
      GroupName: !Sub ${ProjectName}-cache
      VpcId: !Ref VpcId

  SecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Open Redis port
      GroupName: !Sub ${ProjectName}-redis
      SecurityGroupIngress:
        - FromPort: 6379
          IpProtocol: tcp
          SourceSecurityGroupId: !GetAtt AllowedSecurityGroup.GroupId
          ToPort: 6380
      VpcId: !Ref VpcId

  RedisReplicationGroup:
    Type: "AWS::ElastiCache::ReplicationGroup"
    Properties:
      AtRestEncryptionEnabled: true
      TransitEncryptionEnabled: false
      CacheNodeType: !Ref NodeType
      AutoMinorVersionUpgrade: true
      AutomaticFailoverEnabled: false
      CacheSubnetGroupName: !Ref SubnetGroup
      Engine: redis
      ReplicationGroupDescription:
        Fn::Sub: ${ProjectName}-redis-replication-group
      ReplicasPerNodeGroup: !Ref Replicas
      SecurityGroupIds:
         - "Fn::GetAtt":
            - SecurityGroup
            - GroupId

  RedisEngineCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-core-redis-EngineCPUUtilization
      AlarmDescription: "CloudWatch alarm for Redis Engine CPU Unilization."
      AlarmActions: 
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      OKActions:
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      DatapointsToAlarm: 1
      Dimensions: 
        - Name: CacheClusterId
          Value: !Ref RedisReplicationGroup
      MetricName: EngineCPUUtilization
      Namespace: AWS/ElastiCache
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: !Ref EngineCPUUtilizationThreshold
      TreatMissingData: missing

  RedisCPUUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-core-redis-CPUUtilization
      AlarmDescription: "CloudWatch alarm for Redis  CPU Unilization."
      AlarmActions: 
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      OKActions:
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      DatapointsToAlarm: 1
      Dimensions: 
        - Name: CacheClusterId
          Value: !Ref RedisReplicationGroup
      MetricName: CPUUtilization
      Namespace: AWS/ElastiCache
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: !Ref CPUUtilizationThreshold
      TreatMissingData: missing

  RedisMemoryUtilizationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-core-redis-MemoryUsage
      AlarmDescription: "CloudWatch alarm for Redis  Memory usage."
      AlarmActions: 
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      OKActions:
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      DatapointsToAlarm: 1
      Dimensions: 
        - Name: CacheClusterId
          Value: !Ref RedisReplicationGroup
      MetricName: DatabaseMemoryUsagePercentage
      Namespace: AWS/ElastiCache
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: !Ref RedisMemoryUsedThreshold
      TreatMissingData: missing

  RedisCurrentConnectionsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${ProjectName}-core-redis-CurrentConnections
      AlarmDescription: "CloudWatch alarm for concurrent and active connections."
      AlarmActions: 
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      OKActions:
        - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${AlarmSNSTopicName}'
      DatapointsToAlarm: 1
      Dimensions: 
        - Name: CacheClusterId
          Value: !Ref RedisReplicationGroup
      MetricName: CurrConnections
      Namespace: AWS/ElastiCache
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 60
      Period: 60
      Statistic: Sum
      Threshold: !Ref CurrentConnectionsThreshold
      TreatMissingData: missing

  ElastiCacheUserGroup:
    Type: AWS::ElastiCache::UserGroup
    Properties:
      Engine: redis
      UserGroupId: !Sub ${ProjectName}-redis-user-group
      UserIds: 
        - !Ref DefaultElasticCacheUser
        - !Ref ElasticCacheUser1

  DefaultElasticCacheUser:
    Type: AWS::ElastiCache::User
    Properties:
      AccessString: !Ref AccessStringDefaultUser
      AuthenticationMode: 
        Type: no-password-required
      Engine: redis
      UserId: !Ref UserIdDefaultUser
      UserName: !Ref UsernameDefaultUser

  ElasticCacheUser1:
    Type: AWS::ElastiCache::User
    Properties:
      AccessString: !Ref AccessStringUser1
      AuthenticationMode: 
        Type: iam
      Engine: redis
      UserId: !Ref UserIdUser1
      UserName: !Ref UsernameUser1

Outputs:
  AllowedSecurityGroupId:
    Description: The id of the security group that can access the cache cluster
    Value: !GetAtt AllowedSecurityGroup.GroupId

  RedisEndpoint:
    Description: The endpoint Address for Redis serverless
    Value:
      Fn::If:
        - IsServerless
        - Fn::GetAtt:
          - RedisServerless
          - Endpoint.Address
        - Fn::GetAtt:
          - RedisReplicationGroup
          - PrimaryEndPoint.Address

  RedisCurrentConnectionsAlarmArn:
    Value: 
      Fn::If:
        - IsServerless
        - ""
        - !GetAtt RedisCurrentConnectionsAlarm.Arn

  RedisMemoryUtilizationAlarm:
    Value: 
      Fn::If:
        - IsServerless
        - ""
        - !GetAtt RedisMemoryUtilizationAlarm.Arn

  RedisCPUUtilizationAlarm:
    Value: 
      Fn::If:
        - IsServerless
        - ""
        - !GetAtt RedisCPUUtilizationAlarm.Arn

  RedisEngineCPUAlarm:
    Value: 
      Fn::If:
        - IsServerless
        - ""
        - !GetAtt RedisEngineCPUAlarm.Arn

  RedisServerlessArn:
    Description: The Redis serverless Arn
    Value: !GetAtt RedisServerless.ARN

  RedisServerlessName:
    Description: The Redis serverless Arn
    Value: !Ref RedisServerless

  ElasticCacheUser1Arn:
    Description: ElasticCacheUser1 Arn
    Value: !GetAtt ElasticCacheUser1.Arn