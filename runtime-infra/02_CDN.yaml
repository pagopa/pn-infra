AWSTemplateFormatVersion: 2010-09-09

Parameters:
  EnvName:
    Type: String
    Description: Nome dell'ambiente destinazione
  EnvNumber:
    Type: String
    Description: Second byte from the left for VPC CIDR
  APIDomain:
    Description: "Domain for API"
    Type: String
  WebDomain:
    Description: "Domain for webapp"
    Type: String
  APICertificateArn:
    Description: "ACM API Certificate ARN"
    Type: String
  WebCertificateArn:
    Description: "ACM Web Certificate ARN"
    Type: String
  HostedZoneId:
    Description: "Hosted Zone Id in which you want to add record"
    Type: String
  
Mappings:
  Region2S3WebsiteSuffix:
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com
    eu-south-1:
      Suffix: .s3-website.eu-south-1.amazonaws.com

Resources:
  # - CloudFront User used for WebApp S3 Bucket access
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'CloudFront OAI for ${EnvName} WebApp'
  # - WebApp S3 Bucket
  S3BucketForWebsiteContent:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  # - Webapp S3 Bucket policy
  S3BucketForWebsiteContentPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref 'S3BucketForWebsiteContent'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource: !Sub '${S3BucketForWebsiteContent.Arn}/*'
          Principal:
            CanonicalUser:
              Fn::GetAtt:
              - CloudFrontOriginAccessIdentity
              - S3CanonicalUserId
  # - WebApp caching policy
  WebsiteCDNCachingPolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Name: !Sub '${EnvName}-WebsiteCDNCachingPolicy'
        Comment: 'Keep cache for one minute.' #TODO: one minute is fine for non versioned files; versioned files must live forever
        DefaultTTL: 30
        MaxTTL: 60
        MinTTL: 10
        ParametersInCacheKeyAndForwardedToOrigin:
          EnableAcceptEncodingBrotli: true
          EnableAcceptEncodingGzip: true
          CookiesConfig:
            CookieBehavior: none
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all
  # - WebApp CDN
  WebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for S3-backed website
        Aliases:
          - !Ref WebDomain
        Enabled: 'true'
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          CachedMethods:
            - GET
            - HEAD
          TargetOriginId: !Sub 'S3-${S3BucketForWebsiteContent}'
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: !Ref WebsiteCDNCachingPolicy
        DefaultRootObject: index.html
        Origins:
        - DomainName: !Sub '${S3BucketForWebsiteContent.DomainName}'
          Id: !Sub 'S3-${S3BucketForWebsiteContent}'
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Join:
              - ''
              - - origin-access-identity/cloudfront/
                - Ref: CloudFrontOriginAccessIdentity
        ViewerCertificate:
          AcmCertificateArn: !Ref WebCertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only

  Route53RecordSetGroup:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref WebDomain
      Type: A
      HostedZoneId: !Ref HostedZoneId
      AliasTarget:
        DNSName: !GetAtt WebsiteCDN.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2


Outputs:
  # - WebApp Outputs
  WebAppBucketName:
    Value: !Ref 'S3BucketForWebsiteContent'
    Description: Name of S3 bucket to hold website content
    Export:
      Name: !Sub '${EnvName}-website-bucket-name'
  WebAppCdnUrl:
    Value:  !Sub 'https://${WebDomain}'
    Description: Site access URL
    Export:
      Name: !Sub '${EnvName}-cdn-url'

