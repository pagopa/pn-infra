AWSTemplateFormatVersion: '2010-09-09'
Description: Fragment for Glue Table and Crawler for CDC files analysis
Parameters:
  GlueDatabaseName:
    Description: Name of the Glue Database
    Type: String
  ProjectName:
    Type: String
    Default: pn
    Description: Base name for pn project    
  LogsBucketName:
    Type: String
    Description: Logs bucket name
  GlueTableName:
    Type: String
    AllowedPattern: '^[a-z_]+$'
    ConstraintDescription: |
       Glue table name for data-quality-<env>-cfg.json file,
       accept only lowercase letters and underscores.
  DynamoTableName:
    Description: Name of dynamoDb table
    Type: String
  DynamoDBKeysStructure:
    Description: Structure of the dynamodb column
    Type: String
  DynamoDBNewImageStructure:
    Description: First part of the dynamodb column structure
    Type: String
  DynamoDBNewImageStructurePart2:
    Description: Second part of the dynamodb column structure (optional)
    Type: String
    Default: ""
  CdcRecordFilter:
    Description: Filter technical dynamo table record
    Type: String
    Default: ""
  GenerateCdcView:
    Description: Set to false to disable view generation
    Type: String
    Default: "true"
  GlueCrawlerSchedule:
    Type: String
    Default: ''
    Description: Cron expression for the Glue Crawler schedule.
  GlueServiceRoleArn:
    Type: String
    Description: Service role for the Glue Crawler.

Conditions:
  IsGlueCrawlerScheduled: !Not
    - !Equals
      - !Ref GlueCrawlerSchedule
      - ''
  HasCdcView: !Equals [ "true", !Ref GenerateCdcView ]
  HasNewImagePart2: !Not 
    - !Equals 
      - !Ref DynamoDBNewImageStructurePart2
      - ''

Resources:
  GlueTable:
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseName
      TableInput:
        Name: !Ref GlueTableName
        TableType: EXTERNAL_TABLE
        PartitionKeys:
          - Name: p_year
            Type: string
            Comment: Kinesis stream partition year
          - Name: p_month
            Type: string
            Comment: Kinesis stream partition month
          - Name: p_day
            Type: string
            Comment: Kinesis stream partition day
          - Name: p_hour
            Type: string
            Comment: Kinesis stream partition hour
        Parameters:
          projection.enabled: 'true'
          projection.p_year.type: integer
          projection.p_year.range: 2022,2099
          projection.p_month.type: integer
          projection.p_month.range: 1,12
          projection.p_month.digits: '2'
          projection.p_day.type: integer
          projection.p_day.range: 1,31
          projection.p_day.digits: '2'
          projection.p_hour.type: integer
          projection.p_hour.range: 0,23
          projection.p_hour.digits: '2'
          storage.location.template: !Join
            - ''
            - - 's3://'
              - !Ref LogsBucketName
              - '/cdcTos3/TABLE_NAME_'
              - !Ref DynamoTableName
              - '/${p_year}/${p_month}/${p_day}/${p_hour}/'
        StorageDescriptor:
          Columns:
            - Name: awsRegion
              Type: string
            - Name: eventID
              Type: string
            - Name: eventName
              Type: string
            - Name: userIdentity
              Type: string
            - Name: recordFormat
              Type: string
            - Name: tableName
              Type: string
            - Name: dynamodb
              Type: !Join
                - ''
                - !Split
                  - ' '
                  - !Join
                    - ''
                    - !Split
                      - "\n"
                      - !If 
                        - HasNewImagePart2
                        - !Sub "struct<ApproximateCreationDateTime:bigint,SizeBytes:bigint,Keys:${DynamoDBKeysStructure},NewImage:${DynamoDBNewImageStructure}${DynamoDBNewImageStructurePart2}>"
                        - !Sub "struct<ApproximateCreationDateTime:bigint,SizeBytes:bigint,Keys:${DynamoDBKeysStructure},NewImage:${DynamoDBNewImageStructure}>"
          Location: !Sub s3://${LogsBucketName}/cdcTos3/TABLE_NAME_${DynamoTableName}/
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          Compressed: false
          SerdeInfo:
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
          StoredAsSubDirectories: false

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      DatabaseName: !Ref GlueDatabaseName
      Name: !Sub ${GlueTableName}_crawler
      Role: !Ref GlueServiceRoleArn
      Targets:
        CatalogTargets:
          - DatabaseName: !Ref GlueDatabaseName
            Tables:
              - !Ref GlueTableName
      SchemaChangePolicy:
        UpdateBehavior: LOG
        DeleteBehavior: LOG
      Configuration: '{"Version":1.0,"CrawlerOutput":{"Partitions":{"AddOrUpdateBehavior":"InheritFromTable"}}}'
      Schedule: !If
        - IsGlueCrawlerScheduled
        - ScheduleExpression: !Ref GlueCrawlerSchedule
        - !Ref AWS::NoValue
  
  CdcGlueView:
    Condition: HasCdcView
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseName
      TableInput:
        Name: !Sub '${GlueTableName}_jsonview_slow'
        TableType: VIRTUAL_VIEW
        Parameters:
          presto_view: 'true'
          comment: !Sub "Presto View for ${GlueTableName} cdc"
        StorageDescriptor:
          Columns:
            'Fn::Transform':
              Name: 'GenerateCdcViewMacro'
              Parameters:
                DatabaseName: !Ref GlueDatabaseName
                CatalogName : 'awsdatacatalog'
                CdcTableName: !Ref GlueTableName
                CdcParsedTableName: !Sub '${GlueTableName}_parsed_cache'
                CdcViewName: !Sub '${GlueTableName}_jsonview_slow'
                CdcKeysType: !Ref DynamoDBKeysStructure
                CdcNewImageType: !Sub "${DynamoDBNewImageStructure}${DynamoDBNewImageStructurePart2}"
                CdcRecordFilter: !Ref CdcRecordFilter
                OutputType: 'StorageDescriptor-Columns'
                Enabled: !Ref GenerateCdcView # Enable or disable heavy transformation computation if not needed
          Location: ""
          SerdeInfo: {}
        ViewExpandedText: "/* Presto View */"
        ViewOriginalText:
          'Fn::Transform':
            Name: 'GenerateCdcViewMacro'
            Parameters:
              DatabaseName: !Ref GlueDatabaseName
              CatalogName : 'awsdatacatalog'
              CdcTableName: !Ref GlueTableName
              CdcParsedTableName: !Sub '${GlueTableName}_parsed_cache'
              CdcViewName: !Sub '${GlueTableName}_jsonview_slow'
              CdcKeysType: !Ref DynamoDBKeysStructure
              CdcNewImageType: !Sub "${DynamoDBNewImageStructure}${DynamoDBNewImageStructurePart2}"
              CdcRecordFilter: !Ref CdcRecordFilter
              OutputType: 'ViewOriginalText'
              Enabled: !Ref GenerateCdcView # Enable or disable heavy transformation computation if not needed
  
  GlueParquetTable:
    Condition: HasCdcView
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseName
      TableInput:
        Name: !Sub ${GlueTableName}_parsed_cache
        TableType: EXTERNAL_TABLE
        PartitionKeys:
          - Name: p_year
            Type: string
            Comment: Kinesis stream partition year
          - Name: p_month
            Type: string
            Comment: Kinesis stream partition month
          - Name: p_day
            Type: string
            Comment: Kinesis stream partition day
        Parameters:
          projection.enabled: 'true'
          projection.p_year.type: integer
          projection.p_year.range: 2022,2099
          projection.p_month.type: integer
          projection.p_month.range: 1,12
          projection.p_month.digits: '2'
          projection.p_day.type: integer
          projection.p_day.range: 1,31
          projection.p_day.digits: '2'
          storage.location.template: !Join
            - ''
            - - 's3://'
              - !Ref LogsBucketName
              - '/cdcTos3_parsed/TABLE_NAME_'
              - !Ref DynamoTableName
              - '/${p_year}/${p_month}/${p_day}/'
        StorageDescriptor:
          Columns:
            'Fn::Transform':
              Name: 'GenerateCdcViewMacro'
              Parameters:
                DatabaseName: !Ref GlueDatabaseName
                CatalogName : 'awsdatacatalog'
                CdcTableName: !Ref GlueTableName
                CdcParsedTableName: !Sub '${GlueTableName}_parsed_cache'
                CdcViewName: !Sub '${GlueTableName}_jsonview_slow'
                CdcKeysType: !Ref DynamoDBKeysStructure
                CdcNewImageType: !Sub "${DynamoDBNewImageStructure}${DynamoDBNewImageStructurePart2}"
                CdcRecordFilter: !Ref CdcRecordFilter
                OutputType: 'StorageDescriptor-Columns-noParsedPartition'
                Enabled: !Ref GenerateCdcView # Enable or disable heavy transformation computation if not needed
          Location: !Sub s3://${LogsBucketName}/cdcTos3_parsed/TABLE_NAME_${DynamoTableName}/
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          Compressed: false
          SerdeInfo:
            SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          StoredAsSubDirectories: false

  CdcGlueMaterializedView:
    Condition: HasCdcView
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref GlueDatabaseName
      TableInput:
        Name: !Sub '${GlueTableName}_materialized_view'
        TableType: VIRTUAL_VIEW
        Parameters:
          presto_view: 'true'
          comment: !Sub "Presto View for ${GlueTableName} cdc based on parquet cache"
        StorageDescriptor:
          Columns:
            'Fn::Transform':
              Name: 'GenerateCdcViewMacro'
              Parameters:
                DatabaseName: !Ref GlueDatabaseName
                CatalogName : 'awsdatacatalog'
                CdcTableName: !Ref GlueTableName
                CdcParsedTableName: !Sub '${GlueTableName}_parsed_cache'
                CdcViewName: !Sub '${GlueTableName}_jsonview_slow'
                CdcKeysType: !Ref DynamoDBKeysStructure
                CdcNewImageType: !Sub "${DynamoDBNewImageStructure}${DynamoDBNewImageStructurePart2}"
                CdcRecordFilter: !Ref CdcRecordFilter
                OutputType: 'StorageDescriptor-Columns'
                Enabled: !Ref GenerateCdcView # Enable or disable heavy transformation computation if not needed
          Location: ""
          SerdeInfo: {}
        ViewExpandedText: "/* Presto View */"
        ViewOriginalText:
          'Fn::Transform':
            Name: 'GenerateCdcViewMacro'
            Parameters:
              DatabaseName: !Ref GlueDatabaseName
              CatalogName : 'awsdatacatalog'
              CdcTableName: !Ref GlueTableName
              CdcParsedTableName: !Sub '${GlueTableName}_parsed_cache'
              CdcViewName: !Sub '${GlueTableName}_jsonview_slow'
              CdcKeysType: !Ref DynamoDBKeysStructure
              CdcNewImageType: !Sub "${DynamoDBNewImageStructure}${DynamoDBNewImageStructurePart2}"
              CdcRecordFilter: !Ref CdcRecordFilter
              OutputType: 'ViewOriginalText'
              Enabled: !Ref GenerateCdcView # Enable or disable heavy transformation computation if not needed
  

Outputs:
  GlueTableName:
    Description: Name of the created Glue Table
    Value: !Ref GlueTableName
  GlueCrawlerName:
    Description: Name of the created Glue Crawler
    Value: !Ref GlueCrawler
  GlueViewName:
    Description: Name of the created Glue View
    Value: 
      Fn::If:
        - HasCdcView
        - !Sub '${GlueTableName}_materialized_view'
        - "-"

