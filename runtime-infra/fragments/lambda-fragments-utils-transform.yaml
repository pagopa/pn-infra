AWSTemplateFormatVersion: 2010-09-09
Description: This template creates a CloudFormation macro to transform input

Resources:
  DynamicVariableListMacro:
    Type: AWS::CloudFormation::Macro
    Properties:
      Description: Define a custom enviroment variable set for a lambda function
      FunctionName: !GetAtt DynamicEnvVariablesFunction.Arn
      Name: DynamicVariableListTransform

  DynamicEnvVariablesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${!GetAtt DynamicVariableListMacro.Name}"
      RetentionInDays: 14

  DynamicEnvVariablesRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      Policies:
        - PolicyName: DynamicEnvVariables
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource:
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/${!GetAtt DynamicVariableListMacro.Name}"
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/${!GetAtt DynamicVariableListMacro.Name}:*"

  DynamicEnvVariablesFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          async function handler(event, context) {
              console.log('event is ', event.body);

              return  {
                  statusCode:200,
                  body:"ok"
              }
          };
          exports.handler = handler;
      Runtime: nodejs18.x
      Handler: "index.handler"
      Role: !GetAtt DynamicEnvVariablesRole.Arn

  DynamicEnvVariablesFunctionPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt DynamicEnvVariablesFunction.Arn
      Principal: "cloudformation.amazonaws.com"
