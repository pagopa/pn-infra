AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  AlarmSNSTopicArn:
    Type: String
    Description: ARN of the SNS topic for alarms

  FunctionName:
    Type: String
    Description: Lambda function name

  DataPointsToAlarm:
    Type: Number
    Default: 1

  EvaluationPeriods:
    Type: Number
    Default: 60
  
  FilterPattern:
    Type: String
    Default: "ERROR"

  IteratorAgeEvaluationPeriods:
    Type: Number
    Default: 0 # disabled by default
    Description: Number of periods to evaluate for the IteratorAge alarm

  IteratorAgeThreshold:
    Type: Number
    Default: 3600000 # 1 hour in milliseconds
    Description: Threshold for the IteratorAge alarm

Conditions:
  HasIteratorAgeAlarm: !Not [!Equals [!Ref IteratorAgeEvaluationPeriods, 0]]

Resources:
  # Create an alarm on Lambda Iterator Age
  LambdaIteratorAgeAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: HasIteratorAgeAlarm
    Properties:
      AlarmName: !Sub "${FunctionName}-IteratorAge-Alarm"
      AlarmDescription: "CloudWatch alarm for when lambda iterator age is greater than 1 hour for more than 30 periods of 1 minute."
      TreatMissingData: notBreaching
      AlarmActions: 
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: !Ref IteratorAgeEvaluationPeriods
      Threshold: !Ref IteratorAgeThreshold
      MetricName: IteratorAge
      Namespace: AWS/Lambda
      Period: 60 # 1 minute
      Statistic: Maximum
      Dimensions:
        - Name: FunctionName
          Value: !Ref FunctionName

  # CloudWatch metric to filer ERROR in log group
  LambdaErrorLogsMetricFilter: 
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub /aws/lambda/${FunctionName}
      FilterPattern: !Sub '[w1, w2, w3="${FilterPattern}", w4]'
      MetricTransformations: 
        - MetricValue: 1
          MetricNamespace: "ErrorFatalLogs"
          MetricName: !Sub "${FunctionName}-ErrorMetric"

  # Create alarm
  LambdaInvocationErrorLogsMetricAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: LambdaErrorLogsMetricFilter
    Properties:
      AlarmName: !Sub "${FunctionName}-LogInvocationErrors-Alarm"
      AlarmDescription: "CloudWatch alarm for when lambda has ERROR line or an invocation error happens."
      TreatMissingData: notBreaching
      AlarmActions: 
        - !Ref AlarmSNSTopicArn
      OKActions:
        - !Ref AlarmSNSTopicArn
      DatapointsToAlarm: !Ref DataPointsToAlarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: !Ref EvaluationPeriods
      Threshold: 1
      Metrics:
        - Id: m1
          MetricStat:
            Metric:
              MetricName: !Sub ${FunctionName}-ErrorMetric
              Namespace: ErrorFatalLogs
            Period: 60
            Stat: Sum
          ReturnData: False
        - Id: m2
          MetricStat:
            Metric:
              Dimensions:
                - Name: FunctionName
                  Value: !Ref FunctionName
              Namespace: AWS/Lambda
              MetricName: Errors
            Period: 60
            Stat: Sum
          ReturnData: False
        - Id: e1
          Expression: SUM([m1,m2])
          Label: !Sub "${FunctionName}-LogInvocationErrorsAlarm"
Outputs:
  LambdaInvocationErrorLogsMetricAlarm:
    Description: 'Lambda alarm ARN'
    Value: !GetAtt LambdaInvocationErrorLogsMetricAlarm.Arn