AWSTemplateFormatVersion: '2010-09-09'
Description: Create Kinesis Streams from DynamoDB Table and CloudWatch LogGroups

Parameters:
  StreamName:
    Type: String
    Description: 'Kinesis stream name'
  
  StreamRetentionPeriodHours:
    Type: Number
    Description: 'Stream retention period in hours'

  StreamShardCount:
    Type: Number
    Default: 0
    Description: 'Number of shards in the stream'

  StreamMode:
    Description: Stream Mode.
    Default: ON_DEMAND
    Type: String
    AllowedValues: [ON_DEMAND, PROVISIONED]

Conditions: 
  OnDemandDisabled: !Not [!Equals [!Ref StreamMode, ON_DEMAND]]

Resources:

  ### AWS KMS / Server-side encryption for Kinesis Stream 
  # https://docs.aws.amazon.com/streams/latest/dev/server-side-encryption.html
  KinesisServerSideEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain

  ### Kinesis Data Stream 
  KinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: !Ref StreamName
      RetentionPeriodHours: !Ref StreamRetentionPeriodHours
      ShardCount: !If [OnDemandDisabled, !Ref StreamShardCount, !Ref "AWS::NoValue"]
      StreamEncryption:
        EncryptionType: KMS
        KeyId:
          Fn::GetAtt:
            - KinesisServerSideEncryptionKey
            - Arn
      StreamModeDetails:
        StreamMode: !Ref StreamMode    

  ### Read Only role for external user
  # KinesisStreamReadOnlyRole:
  #   Type: AWS::IAM::Role
  #   Properties:
  #     RoleName: !Sub '${StreamName}-readonly-role'
  #     Description: !Sub 'Role for Firehose stream to receive data from ${StreamName}'
  #     AssumeRolePolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Action: sts:AssumeRole
  #           Effect: Allow
  #           Principal:
  #             Service: firehose.amazonaws.com
  #     Policies:
  #       - PolicyName: AllowLogging
  #         PolicyDocument:
  #           Version: '2012-10-17'
  #           Statement:
  #             - Sid: readRecordsAndListShards
  #               Effect: Allow
  #               Action:
  #                 - kinesis:DescribeStream
  #                 - kinesis:DescribeStreamSummary
  #                 - kinesis:GetShardIterator
  #                 - kinesis:GetRecords
  #                 - kinesis:ListShards    
  #                 - kinesis:ListStreams
  #                 - kinesis:SubscribeToShard
  #               Resource: !GetAtt 'KinesisStream.Arn'
  #             - Sid: decryptMessages
  #               Action: kms:Decrypt
  #               Effect: Allow
  #               Resource: !GetAtt 'KinesisServerSideEncryptionKey.Arn'

Outputs:
  
  KinesisStreamName:
    Value: !Ref KinesisStream
    Description: 'Kinesis source stream name'
  
  KinesisStreamArn:
    Value: !GetAtt KinesisStream.Arn
    Description: 'Kinesis source stream name ARN'

  KinesisStreamKeyArn:
    Value: !GetAtt KinesisServerSideEncryptionKey.Arn
    Description: 'Arn of the KMS key used to encrypt the Kinesis source stream'

  # KinesisStreamReadOnlyRoleArn:
  #   Value: !GetAtt KinesisStreamReadOnlyRole.Arn
  #   Description: 'Arn of the role configured for reading Kinesis source stream'
