AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Contains SNS topics configured to send message to DevOps Engineer. At the current state has only
  one "alarm" channel sending messages to slack channel
Parameters:
  TopicName:
    Type: String
    Description: Topic logical name

  SNSTopicArn:
    Type: String
    Description: SNS topic ARN

  SlackInfo:
    Type: String
    Description: <slack workspace id>:<slack channel id>. 'team_notifiche_dev_alarm' by default
    Default: TQSBH3ZS4:C02V0SRC4TV

Resources:

  # - List services allowed to publish alarm messages
  #   EventBridge: events.amazonaws.com
  CanPublishAlarmTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Sid: AllowServices
            Effect: Allow
            Principal:
              Service:
                - "events.amazonaws.com"
                - "cloudwatch.amazonaws.com"
            Action:
              - 'sns:Publish'
            Resource:
              - !Ref SNSTopicArn
      Topics:
        - !Ref SNSTopicArn

  # - Send alarm messages to CharBot
  AlarmToChatbot:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref SNSTopicArn
      Endpoint: "https://global.sns-api.chatbot.amazonaws.com"
      Protocol: https

  # - Define Chatbot service configuration: send to slack channel defined by the SlackInfo parameter
  DevOpsChatbot:
    Type: AWS::Chatbot::SlackChannelConfiguration
    Properties:
      ConfigurationName: !Sub '${TopicName}-DevOps-chatbot'
      IamRoleArn:
        Fn::GetAtt: [ DevOpsChatbotIAMRole, Arn ]
      LoggingLevel: INFO
      SlackChannelId:
        Fn::Select:
          - '1'
          - Fn::Split:
              - ":"
              - Ref: SlackInfo
      SlackWorkspaceId:
        Fn::Select:
          - '0'
          - Fn::Split:
              - ":"
              - Ref: SlackInfo
      SnsTopicArns:
        - Ref: SNSTopicArn


  # - Authorize Chatbot service to read from the alarm topic
  DevOpsChatbotIAMRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub 'Role for DevOps chatbot of ${TopicName} environment'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - chatbot.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/service_role/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
