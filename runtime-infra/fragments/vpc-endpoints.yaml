AWSTemplateFormatVersion: 2010-09-09
Description: 'Configure connection to AWS services on private AWS networks'

Parameters:
  VpcName:
    Type: String
    Description: 'VPC name: pn-dev, pn-uat, extreg-dev, ...'

  VpcCidr:
    Type: String
    Description: Address range for security group

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the VPC for the endpoint.

  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    
  RouteTableIds:
    Type: List<String>


Resources:

  ###                  PRIVATE CONNECTIONS CONFIGURATIONS                  ###
  ############################################################################

  ### to S3 service ###
  S3VPCGatewayEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Gateway
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds: !Ref RouteTableIds
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref VpcId

  ### to DynamoDB service ###
  DynamoDBVPCGatewayEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: Gateway
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds: !Ref RouteTableIds
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.dynamodb'
      VpcId: !Ref VpcId


  ### to SQS service ###
  SQSInterfaceEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sqs'
      SubnetIds: !Ref Subnets
      VpcId: !Ref VpcId

  ### to CloudWatch service ###
  CloudWatchInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to SNS service ###
  SNSInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.sns'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to KMS service ###
  KMSInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.kms'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to Kinesis Stream service ###
  KinesisStreamInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.kinesis-streams'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to ELB service ###
  ElbInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.elasticloadbalancing'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to EventBridge service ###
  EventBridgeInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.events'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to ECR API service ###
  ECRApiInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.api'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### to ECR DKR service ###
  ECRDkrInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecr.dkr'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### SSM Messages - EC2 connection ###
  SSMMessagesInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssmmessages'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### SSM - EC2 connection ###
  SSMInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ssm'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### EC2 Message - EC2 Connection ###
  EC2InferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ec2messages'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### ECS Agent - ECS Connection ###
  ECSAgentInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecs-agent'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### ECS Telemetry - ECS Connection ###
  ECSTelemetryInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecs-telemetry'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ### ECS - ECS Connection ###
  ECSInferanceEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties: 
      PrivateDnsEnabled: true
      SecurityGroupIds: 
        - !Ref InterfaceSecurityGroup
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.ecs'
      SubnetIds: !Ref Subnets
      VpcEndpointType: Interface
      VpcId: !Ref VpcId

  ###         ALLOW ACCESS TO SERVICES ELASTIC NETWORK INTERFACES         ###
  ###########################################################################
  InterfaceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Controls Inbound Access to the VPC Interface Endpoint from within the VPC'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - FromPort: '0'
          ToPort: '65535'
          IpProtocol: tcp
          CidrIp: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: !Sub '${VpcName}-Interface-Endpoint-SecGrp'
        - Key: "pnInfraFeature"
          Value: "baseInfra"

