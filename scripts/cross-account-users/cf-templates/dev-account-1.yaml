AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create Roles in Account Dev

Parameters:
  TrustedAccountId:
    Type: String
    Description: Enter the ID of the trusted account

  TagKeyReadOnly:
    Type: String
    Description: Enter the Tag Key for Read Only

  TagValueReadOnly:
    Type: String
    Description: Enter the Tag Value for Read Only

  TagKeyAdminAccess:
    Type: String
    Description: Enter the Tag Key for Admin Access

  TagValueAdminAccess:
    Type: String
    Description: Enter the Tag Value for AdminAccess
  
Resources:
  # Read Only Access Role that can be assumed by this account
  # There has to be a Principal, that's why this account is used as principal, but serves no use in this use case
  RoleReadOnlyAccess:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: ReadOnlyAccess-DEV
      AssumeRolePolicyDocument: 
        !Sub |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal":{
                  "AWS": "arn:aws:iam::${TrustedAccountId}:root"
                },
                "Action":"sts:AssumeRole",
                "Condition": {
                  "StringEquals":{
                    "aws:PrincipalTag/${TagKeyReadOnly}": ${TagValueReadOnly}
                  }
                }
              }
            ]
          }
      Path: "/"
      ManagedPolicyArns:
       - "arn:aws:iam::aws:policy/ReadOnlyAccess"

  # Administrator Access Role that can be assumed by this account
  RoleAdministratorAccess:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: AdminAccess-DEV
      AssumeRolePolicyDocument: 
        !Sub |
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal":{
                  "AWS": "arn:aws:iam::${TrustedAccountId}:root"
                },
                "Action":"sts:AssumeRole",
                "Condition": {
                  "StringEquals":{
                    "aws:PrincipalTag/${TagKeyAdminAccess}": ${TagValueAdminAccess}
                  }
                }
              }
            ]
          }
      Path: "/"
      ManagedPolicyArns:
       - "arn:aws:iam::aws:policy/AdministratorAccess" 

Outputs:
  RoleReadOnlyAccessARN:
    Description: "ARN of the ReadOnlyAccess role"
    Value: !GetAtt RoleReadOnlyAccess.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ARN-RoleReadOnlyAccess"
  
  RoleAdministratorAccessARN:
    Description: "ARN of the AdministratorAccess role"
    Value: !GetAtt RoleAdministratorAccess.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ARN-RoleAdministratorAccess"
