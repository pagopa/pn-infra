AWSTemplateFormatVersion: "2010-09-09"
Description: Template to create the IAM Policies in the CICD Account

Parameters:
  # ARN of the roles in Account DEV
  RoleAdministratorAccessDEV:
    Type: String
    Description: 'Enter the ARN of the role AdministratorAccess in Account Dev'
  
  RoleReadOnlyAccessDEV:
    Type: String
    Description: 'Enter the ARN of the Role ReadOnlyAccess in Account Dev'

  # ARN of the roles in Account HotFix
  RoleAdministratorAccessHOTFIX:
    Type: String
    Description: 'Enter the ARN of the role AdministratorAccess in Account HotFix'

  RoleReadOnlyAccessHOTFIX:
    Type: String
    Description: 'Enter the ARN of the Role ReadOnlyAccess in Account HotFix'

Resources:

  ######################
  ####### IAM ##########
  ######################

  # Policy that has Read Only for Logs, CodePipeline, CodeBuild and a permission to start builds
  PolicyReadOnly:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: PolicyReadOnlyLogsCodePipelineCodeBuild
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          # ReadOnly Logs
          - Effect: Allow
            Action: 
              - "logs:Describe*"
              - "logs:Get*"
              - "logs:List*"
              - "logs:StartQuery"
              - "logs:StopQuery"
              - "logs:TestMetricFilter"
              - "logs:FilterLogEvents"
            Resource: '*'
          # ReadOnly CodePipeline
          - Effect: Allow
            Action:
              - "codepipeline:GetPipeline"
              - "codepipeline:GetPipelineState"
              - "codepipeline:GetPipelineExecution"
              - "codepipeline:ListPipelineExecutions"
              - "codepipeline:ListActionExecutions"
              - "codepipeline:ListActionTypes"
              - "codepipeline:ListPipelines"
              - "codepipeline:ListTagsForResource"
              - "s3:ListAllMyBuckets"
              - "codestar-notifications:ListNotificationRules"
              - "codestar-notifications:ListEventTypes"
              - "codestar-notifications:ListTargets"
            Resource: "*"
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:GetBucketPolicy"
            Resource: "arn:aws:s3::*:codepipeline-*"
          - Effect: Allow
            Action:
              - "codestar-notifications:DescribeNotificationRule"
            Resource: "*"
            Condition:
              StringLike:
                "codestar-notifications:NotificationsForResource": "arn:aws:codepipeline:*"
          # ReadOnly CodeBuild
          - Effect: Allow
            Action: 
              - "codebuild:BatchGet*"
              - "codebuild:GetResourcePolicy"
              - "codebuild:List*"
              - "codebuild:DescribeTestCases"
              - "codebuild:DescribeCodeCoverages"
              - "codecommit:GetBranch"
              - "codecommit:GetCommit"
              - "codecommit:GetRepository"
              - "cloudwatch:GetMetricStatistics"
              - "events:DescribeRule"
              - "events:ListTargetsByRule"
              - "events:ListRuleNamesByTarget"
              - "logs:GetLogEvents"
            Resource: "*"
          - Effect: Allow
            Action:
              - "codestar-connections:ListConnections"
              - "codestar-connections:GetConnection"
            Resource: "arn:aws:codestar-connections:*:*:connection/*"
          - Effect: Allow
            Action:
              - "codestar-notifications:DescribeNotificationRule"
            Resource: "*"
            Condition:
              StringLike:
                "codestar-notifications:NotificationsForResource": "arn:aws:codebuild:*"
          - Effect: Allow
            Action:
              - "codestar-notifications:ListNotificationRules"
              - "codestar-notifications:ListEventTypes"
              - "codestar-notifications:ListTargets"
            Resource: "*"
          # Start a Build
          - Effect: Allow
            Action:
              - "codebuild:StartBuild"
            Resource: "*"

  # Policy that allows to assume the AdministratorAccess Role in the DEV Account (will be attached to an IAM Group)
  PolicyAssumeAdminAccessDEV:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: AssumeAdminAccessDEV
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action: 
                - "sts:AssumeRole"
              Resource: !Ref RoleAdministratorAccessDEV

  # Policy that allows to assume the ReadOnly Role in the DEV Account (will be attached to an IAM Group)
  PolicyAssumeReadOnlyDEV:
        Type: AWS::IAM::ManagedPolicy
        Properties:
          ManagedPolicyName: AssumeReadOnlyDEV
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "sts:AssumeRole"
                Resource: !Ref RoleReadOnlyAccessDEV

  # Policy that allows to assume the AdministratorAccess Role in the HotFix Account (will be attached to an IAM Group)
  PolicyAssumeAdminAccessHOTFIX:
        Type: AWS::IAM::ManagedPolicy
        Properties:
          ManagedPolicyName: AssumeAdminAccessHOTFIX
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "sts:AssumeRole"
                Resource: !Ref RoleAdministratorAccessHOTFIX

  # Policy that allows to assume the ReadOnly Role in the HotFix Account (will be attached to an IAM Group)
  PolicyAssumeReadOnlyHOTFIX:
        Type: AWS::IAM::ManagedPolicy
        Properties:
          ManagedPolicyName: AssumeReadOnlyHOTFIX
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - "sts:AssumeRole"
                Resource: !Ref RoleReadOnlyAccessHOTFIX

  # Role for Lambda Function
  RoleLambdaUpdateTrustPolicies:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaUpdateTrustPolicies
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

Outputs:
  RoleLambdaUpdateTrustPoliciesOutput:
    Description: "ARN of the LambdaUpdateTrustPolicies Role in this account (CICD)"
    Value: !GetAtt RoleLambdaUpdateTrustPolicies.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ARN-RoleLambdaUpdateTrustPolicies"