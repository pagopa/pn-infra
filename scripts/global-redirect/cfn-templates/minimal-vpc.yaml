
AWSTemplateFormatVersion: '2010-09-09'
Description: Define a VPC with 3 public subnet

Parameters:

  ## Ingress VPC
  VpcIngressName:
    Type: String
    Description: 'Ingress VPC name'
    Default: landing-static-ip-vpc
  VpcIngressNumber:
    Type: String
    Description: Second byte from the left for VPC CIDR
    Default: 240

Resources:

  ###                        INGRESS VPC DEFINITION                        ###
  ############################################################################

  ## VPC for Ingress 
  IngressVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Join ['', ["10.", !Ref "VpcIngressNumber", ".0.0/16" ]]
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub ${VpcIngressName}-VPC
  
  ## Internet Gateway ...
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${VpcIngressName}-IG
  
  ## ... and its attachment
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref IngressVPC

  ## Subnet 1 - Public
  IngressVPCPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Join ['', ["10.", !Ref "VpcIngressNumber", ".1.0/24" ]]
      VpcId:
        Ref: IngressVPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Ingress VPC - PublicSubnet1

  ## Subnet 2 - Public
  IngressVPCPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Join ['', ["10.", !Ref "VpcIngressNumber", ".2.0/24" ]]
      VpcId:
        Ref: IngressVPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Ingress VPC - PublicSubnet2

  ## Subnet 3 - Public
  IngressVPCPublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Join ['', ["10.", !Ref "VpcIngressNumber", ".0.0/24" ]]
      VpcId:
        Ref: IngressVPC
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Ingress VPC - PublicSubnet3


  ## Routing
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref IngressVPC
      Tags:
        - Key: Name
          Value: !Sub ${VpcIngressName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref IngressVPCPublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref IngressVPCPublicSubnet2

  PublicSubnet3RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref IngressVPCPublicSubnet3

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref IngressVPC

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref IngressVPCPublicSubnet1, !Ref IngressVPCPublicSubnet2, !Ref IngressVPCPublicSubnet3 ]]
